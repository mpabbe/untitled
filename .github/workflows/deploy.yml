name: Build and Deploy

on:
  push:
    branches:
      - release
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release
        
      - name: Upload to Firebase Storage
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          
      - name: Get version from pubspec
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Upload APK
        run: |
          VERSION="${{ github.event.inputs.version || steps.version.outputs.version }}"
          gsutil cp build/app/outputs/flutter-apk/app-release.apk gs://just-for-test-2c462.firebasestorage.app/releases/android/app-${VERSION}.apk
          
      - name: Update Firestore
        run: |
          VERSION="${{ github.event.inputs.version || steps.version.outputs.version }}"
          curl -X PATCH \
            "https://firestore.googleapis.com/v1/projects/just-for-test-2c462/databases/(default)/documents/app_versions/android" \
            -H "Authorization: Bearer $(gcloud auth print-access-token)" \
            -H "Content-Type: application/json" \
            -d '{
              "fields": {
                "version": {"stringValue": "'${VERSION}'"},
                "downloadUrl": {"stringValue": "https://storage.googleapis.com/just-for-test-2c462.firebasestorage.app/releases/android/app-'${VERSION}'.apk"},
                "releaseDate": {"timestampValue": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"},
                "description": {"stringValue": "Latest release from branch"}
              }
            }'

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build Windows
        run: flutter build windows --release
        
      - name: Create Installer
        run: |
          python build.py
          
      - name: Get version from pubspec
        id: version
        run: |
          $VERSION = (Select-String -Path "pubspec.yaml" -Pattern "^version:").Line.Split(" ")[1].Split("+")[0]
          echo "version=$VERSION" >> $env:GITHUB_OUTPUT
          
      - name: Upload to Firebase Storage
        run: |
          $VERSION = "${{ github.event.inputs.version || steps.version.outputs.version }}"
          gcloud auth activate-service-account --key-file="${{ secrets.FIREBASE_SERVICE_ACCOUNT_FILE }}"
          gsutil cp installer/untitled_Windows.zip gs://just-for-test-2c462.firebasestorage.app/releases/windows/app-${VERSION}.zip
          
      - name: Update Firestore
        run: |
          $VERSION = "${{ github.event.inputs.version || steps.version.outputs.version }}"
          $TOKEN = gcloud auth print-access-token
          Invoke-RestMethod -Uri "https://firestore.googleapis.com/v1/projects/just-for-test-2c462/databases/(default)/documents/app_versions/windows" -Method PATCH -Headers @{"Authorization"="Bearer $TOKEN"; "Content-Type"="application/json"} -Body (@{
            fields = @{
              version = @{stringValue = $VERSION}
              downloadUrl = @{stringValue = "https://storage.googleapis.com/just-for-test-2c462.firebasestorage.app/releases/windows/app-$VERSION.zip"}
              releaseDate = @{timestampValue = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ")}
              description = @{stringValue = "Latest release from branch"}
            }
          } | ConvertTo-Json -Depth 3)
